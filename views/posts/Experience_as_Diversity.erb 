date: 2014-3-23

<h3>Developer Experience is a Form of Diversity</h3>
<h3>Technical Blog Post</h3>
<div class="response">
  <p>This month after Seattle.rb I got into a fascinating conversation about all sorts of tech industry related topics. It was the first time going out after the regular Seattle.rb meeting and I'm really glad I did. Everyone was really friendly and welcoming. One of the things we discussed got my gears turning and that is about the place of Novice Developers in the workplace.</p>

  <p>A concern was brought to my attention that some of these code schools that are popping up may actually make it harder for self-taught developers to enter the field. I am very aware of the advantages I'm gaining by being part of this program, but it is sad to think that it is not only making life easier for me but actually making it harder for hard-working people trying to break into the field.</p>

  <p>My response in the moment was fairly good and I think helps frame this blogging exploration of the topic. I said that it is my hope that programs like Ada will show sponsoring companies the benefit and power of having Jr. Developers on their teams and make it more likely that they will open up positions for other qualified Jr. Developers.</p>

  <p>Since this conversation I've been giving this a lot of thought. The first thing that the conversation reminded me of was a talk that Elise Worthy gave at Fluent 2013 called <a href="https://www.youtube.com/watch?v=LKfNfB1XdMc">"Getting Good: Integrating Novice Developers"</a>. In it she discusses her own experience as a growing novice developer and some advice for integrating such folk. She also talks about something that I've taken to heart: Functional Diversity. If you haven't seen her talk I recommend you do so now. She is a smart woman and also happens to be the Co-Founder and Program Manager for Ada Developers Academy.</p>

  <p>We've been hearing a lot about diversity in the tech industry in general. Usually the conversation is focused around gender diversity. This is probably because the gap is so obvious. We all know that half the population is female so the imbalance is very easy to measure. In reality though, all forms of diversity are important. Diversity comes in a lot of forms and I would argue that all of them are important. When we have different lived experiences for a variety of demographic reasons we take on problems with different mindsets and this can lead to a wider range of solutions we can consider. Some of the other types of diversity that we should be considering in our teams include, race, age, orientation, class, background, interests, and I would argue, experience level.</p> 

  <p>This can seem overwhelming when you first start to think about it. Some people may feel uncomfortable branching out into working with people who are less like themselves. That discomfort can be enough to discourage expanding the team in ways that are best for the team, product, and inevitably consumers. While all of these forms of diversity are important I think that Elise spoke very well in her talk about how to get started. First of all, everyone needs to understand that this is what is best for the team long term. This may take some time, and it is important to be understanding of that. That said, it is important to be constantly assessing and evaluating the diversity of your teams so that you can make for more robust representation and thus a more robust source of ideas.</p>

  <p>In the work that I've done with people about diversity, through various non-profits. I find that it is sometimes easiest to start talking about diversity with the aspects that people have some experience with. The great thing about experiential diversity is that everyone was once a novice. They all know what it was like to be new and how just a little help from someone more senior and they were able to grow and flourish. At the very least we should be paying it back by paying it forward. This is a relatively painless place to start, dipping your feet into the realm of team diversity.</p>

  <p>The truth is this is a rather big issue. There are many companies complaining about the lack of talent and then only seeking people with extensive experience. That experience takes investment. The reason the person I was talking to after Seattle.rb was concerned about these code schools was not that things like Ada are bad. They are good. We need more developers and this is one way to start making more of us. The reason he was concerned was because there are so few opportunities out there for people who are getting into the field. In a conversation with another developer I came across a good recommendation. Every team that is reasonably sized and reasonably mature has the responsibility to take on one novice developer. I agree with this advice. It is the only way we are all going to continue to have talent available for our projects. As people continue to grow older and more experienced they will keep getting better at creating awesome software for you but they will also be growing toward retirement. Each employee only has so many productive years and you will want to make sure that they pass on their knowledge and that you have people trained up to be the next wave of awesome when your current amazing talent decides it is time to leave.</p>

</div>